<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Year Parameter' datatype='integer' default-format='n0;-0' name='[Year (manufaturing totals 2000 to 2016 restructure.csv) (group) Parameter]' param-domain-type='list' role='measure' type='quantitative' value='2000'>
        <calculation class='tableau' formula='2000' />
        <members>
          <member value='2000' />
          <member value='2001' />
          <member value='2002' />
          <member value='2003' />
          <member value='2004' />
          <member value='2005' />
          <member value='2006' />
          <member value='2007' />
          <member value='2008' />
          <member value='2009' />
          <member value='2010' />
          <member value='2011' />
          <member value='2012' />
          <member value='2013' />
          <member value='2014' />
          <member value='2015' />
          <member value='2016' />
        </members>
      </column>
      <column caption='Select Pollutant' datatype='string' name='[circ Crude Rate (df3.csv) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;NO2&quot;'>
        <calculation class='tableau' formula='&quot;NO2&quot;' />
        <members>
          <member value='&quot;NO2&quot;' />
          <member value='&quot;O3&quot;' />
          <member value='&quot;SO2&quot;' />
          <member value='&quot;All&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='df2.csv+ (Multiple Connections)' inline='true' name='federated.0d6x5161bfkpcv1gpey8j128cq0o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='manufaturing_totals_2000_to_2016' name='textscan.1t4jdl117p9w0y1bebowa0gqkfr5'>
            <connection class='textscan' directory='.' filename='manufaturing_totals_2000_to_2016_restructure.csv' password='' server='' />
          </named-connection>
          <named-connection caption='death_data' name='textscan.1lvokij0oy95vv14nmu7612j324v'>
            <connection class='textscan' directory='.' filename='df2.csv' password='' server='' />
          </named-connection>
          <named-connection caption='df2' name='textscan.19co0380tciikq151aoqu1tb0j1i'>
            <connection class='textscan' directory='.' filename='df1.csv' password='' server='' />
          </named-connection>
          <named-connection caption='manufaturing_totals_2000_to_2016_restructure' name='textscan.1ozb4fd0edcv5s165p4d90xu6mb2'>
            <connection class='textscan' directory='.' filename='manufaturing_totals_2000_to_2016_restructure.csv' password='' server='' />
          </named-connection>
          <named-connection caption='filter' name='textscan.068qc1w1fw6bnz1fdzog7040ydt0'>
            <connection class='textscan' directory='.' filename='filter.csv' password='' server='' />
          </named-connection>
          <named-connection caption='df3' name='textscan.1pwwj460zwdna115j9fxq1pr81p9'>
            <connection class='textscan' directory='.' filename='df3.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1pwwj460zwdna115j9fxq1pr81p9' name='df3.csv' table='[df3#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='County' ordinal='2' />
            <column datatype='integer' name='year' ordinal='3' />
            <column datatype='real' name='avg(NO2 Mean)' ordinal='4' />
            <column datatype='real' name='avg(O3 Mean)' ordinal='5' />
            <column datatype='real' name='avg(SO2 Mean)' ordinal='6' />
            <column datatype='integer' name='Population' ordinal='7' />
            <column datatype='real' name='Area' ordinal='8' />
            <column datatype='integer' name='Deaths' ordinal='9' />
            <column datatype='integer' name='pollution_death' ordinal='10' />
            <column datatype='integer' name='resp_death' ordinal='11' />
            <column datatype='integer' name='circ_death' ordinal='12' />
            <column datatype='integer' name='canc_death' ordinal='13' />
            <column datatype='integer' name='resp_circ_death' ordinal='14' />
            <column datatype='real' name='Crude Rate' ordinal='15' />
            <column datatype='real' name='pollution_Crude_Rate' ordinal='16' />
            <column datatype='real' name='resp_Crude_Rate' ordinal='17' />
            <column datatype='real' name='circ_Crude_Rate' ordinal='18' />
            <column datatype='real' name='canc_Crude_Rate' ordinal='19' />
            <column datatype='real' name='resp_circ_Crude_Rate' ordinal='20' />
            <column datatype='real' name='population_density' ordinal='21' />
            <column datatype='real' name='NO2_tenyears' ordinal='22' />
            <column datatype='real' name='SO2_tenyears' ordinal='23' />
            <column datatype='real' name='O3_tenyears' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1pwwj460zwdna115j9fxq1pr81p9' name='df3.csv' table='[df3#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='County' ordinal='2' />
            <column datatype='integer' name='year' ordinal='3' />
            <column datatype='real' name='avg(NO2 Mean)' ordinal='4' />
            <column datatype='real' name='avg(O3 Mean)' ordinal='5' />
            <column datatype='real' name='avg(SO2 Mean)' ordinal='6' />
            <column datatype='integer' name='Population' ordinal='7' />
            <column datatype='real' name='Area' ordinal='8' />
            <column datatype='integer' name='Deaths' ordinal='9' />
            <column datatype='integer' name='pollution_death' ordinal='10' />
            <column datatype='integer' name='resp_death' ordinal='11' />
            <column datatype='integer' name='circ_death' ordinal='12' />
            <column datatype='integer' name='canc_death' ordinal='13' />
            <column datatype='integer' name='resp_circ_death' ordinal='14' />
            <column datatype='real' name='Crude Rate' ordinal='15' />
            <column datatype='real' name='pollution_Crude_Rate' ordinal='16' />
            <column datatype='real' name='resp_Crude_Rate' ordinal='17' />
            <column datatype='real' name='circ_Crude_Rate' ordinal='18' />
            <column datatype='real' name='canc_Crude_Rate' ordinal='19' />
            <column datatype='real' name='resp_circ_Crude_Rate' ordinal='20' />
            <column datatype='real' name='population_density' ordinal='21' />
            <column datatype='real' name='NO2_tenyears' ordinal='22' />
            <column datatype='real' name='SO2_tenyears' ordinal='23' />
            <column datatype='real' name='O3_tenyears' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg(NO2 Mean)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg(NO2 Mean)]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>avg(NO2 Mean)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg(O3 Mean)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg(O3 Mean)]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>avg(O3 Mean)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg(SO2 Mean)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg(SO2 Mean)]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>avg(SO2 Mean)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pollution_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pollution_death]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>pollution_death</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>resp_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[resp_death]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>resp_death</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>circ_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[circ_death]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>circ_death</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>canc_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[canc_death]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>canc_death</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>resp_circ_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[resp_circ_death]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>resp_circ_death</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crude Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Crude Rate]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Crude Rate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pollution_Crude_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pollution_Crude_Rate]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>pollution_Crude_Rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>resp_Crude_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resp_Crude_Rate]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>resp_Crude_Rate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>circ_Crude_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[circ_Crude_Rate]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>circ_Crude_Rate</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>canc_Crude_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[canc_Crude_Rate]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>canc_Crude_Rate</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>resp_circ_Crude_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[resp_circ_Crude_Rate]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>resp_circ_Crude_Rate</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NO2_tenyears</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NO2_tenyears]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>NO2_tenyears</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SO2_tenyears</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SO2_tenyears]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>SO2_tenyears</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>O3_tenyears</remote-name>
            <remote-type>5</remote-type>
            <local-name>[O3_tenyears]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>O3_tenyears</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Pollutant' datatype='string' name='[Calculation_1428344796868304898]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[circ Crude Rate (df3.csv) Parameter]' />
      </column>
      <column caption='Pollutant Value' datatype='real' name='[Calculation_1428344796868476931]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Calculation_1428344796868304898] &#10;    WHEN &apos;NO2&apos; THEN [NO2_tenyears]&#10;    WHEN &apos;O3&apos; THEN [O3_tenyears]&#10;    WHEN &apos;SO2&apos; THEN [SO2_tenyears]&#10;    WHEN &apos;All&apos; THEN [SO2_tenyears] + [NO2_tenyears] + [O3_tenyears] END' />
      </column>
      <column datatype='string' name='[County (df3.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='NO2 tenyears (df3.csv)' datatype='real' name='[NO2_tenyears (df3.csv)]' role='measure' type='quantitative' />
      <column caption='NO2 tenyears' datatype='real' name='[NO2_tenyears]' role='measure' type='quantitative' />
      <column caption='O3 tenyears' datatype='real' name='[O3_tenyears]' role='measure' type='quantitative' />
      <column caption='SO2 tenyears' datatype='real' name='[SO2_tenyears]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Year (Df3.Csv) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[year (df3.csv)]' new-bin='true' />
      </column>
      <column datatype='string' name='[Year (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[year]' new-bin='true' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='df3.csv' datatype='table' name='[__tableau_internal_object_id__].[df3.csv_BF8D2AED14D946E58E3B26BC958EC615]' role='measure' type='quantitative' />
      <column caption='canc Crude Rate' datatype='real' name='[canc_Crude_Rate]' role='measure' type='quantitative' />
      <column caption='Canc Death' datatype='integer' name='[canc_death]' role='measure' type='quantitative' />
      <column caption='circ Crude Rate' datatype='real' name='[circ_Crude_Rate]' role='measure' type='quantitative' />
      <column caption='Circ Death' datatype='integer' name='[circ_death]' role='measure' type='quantitative' />
      <column caption='pollution Crude Rate' datatype='real' name='[pollution_Crude_Rate]' role='measure' type='quantitative' />
      <column caption='Pollution Death' datatype='integer' name='[pollution_death]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='resp Crude Rate (df3.csv)' datatype='real' name='[resp_Crude_Rate (df3.csv)]' role='measure' type='quantitative' />
      <column caption='resp Crude Rate' datatype='real' name='[resp_Crude_Rate]' role='measure' type='quantitative' />
      <column caption='resp circ Crude Rate' datatype='real' name='[resp_circ_Crude_Rate]' role='measure' type='quantitative' />
      <column caption='Resp Circ Death' datatype='integer' name='[resp_circ_death]' role='measure' type='quantitative' />
      <column caption='Resp Death' datatype='integer' name='[resp_death]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[NO2_tenyears (df3.csv)]' derivation='Sum' name='[sum:NO2_tenyears (df3.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[O3_tenyears]' derivation='Sum' name='[sum:O3_tenyears:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SO2_tenyears]' derivation='Sum' name='[sum:SO2_tenyears:qk]' pivot='key' type='quantitative' />
      <column-instance column='[resp_Crude_Rate (df3.csv)]' derivation='Sum' name='[sum:resp_Crude_Rate (df3.csv):qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='state, county' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:NO2_tenyears (df3.csv):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:resp_Crude_Rate (df3.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:NO2_tenyears:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:SO2_tenyears:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:O3_tenyears:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='county (manufaturing_totals_2000_to_2016_restructure.csv)' />
        <field-sort-custom-order field='state (manufaturing_totals_2000_to_2016_restructure.csv)' />
        <field-sort-custom-order field='year (manufaturing_totals_2000_to_2016_restructure.csv)' />
        <field-sort-custom-order field='fat_amount' />
        <field-sort-custom-order field='Year (manufaturing_totals_2000_to_2016_restructure.csv)' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Pollutant' datatype='string' name='[circ Crude Rate (df3.csv) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;NO2&quot;'>
          <calculation class='tableau' formula='&quot;NO2&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df3.csv' id='df3.csv_BF8D2AED14D946E58E3B26BC958EC615'>
            <properties context=''>
              <relation connection='textscan.1pwwj460zwdna115j9fxq1pr81p9' name='df3.csv' table='[df3#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='string' name='County' ordinal='2' />
                  <column datatype='integer' name='year' ordinal='3' />
                  <column datatype='real' name='avg(NO2 Mean)' ordinal='4' />
                  <column datatype='real' name='avg(O3 Mean)' ordinal='5' />
                  <column datatype='real' name='avg(SO2 Mean)' ordinal='6' />
                  <column datatype='integer' name='Population' ordinal='7' />
                  <column datatype='real' name='Area' ordinal='8' />
                  <column datatype='integer' name='Deaths' ordinal='9' />
                  <column datatype='integer' name='pollution_death' ordinal='10' />
                  <column datatype='integer' name='resp_death' ordinal='11' />
                  <column datatype='integer' name='circ_death' ordinal='12' />
                  <column datatype='integer' name='canc_death' ordinal='13' />
                  <column datatype='integer' name='resp_circ_death' ordinal='14' />
                  <column datatype='real' name='Crude Rate' ordinal='15' />
                  <column datatype='real' name='pollution_Crude_Rate' ordinal='16' />
                  <column datatype='real' name='resp_Crude_Rate' ordinal='17' />
                  <column datatype='real' name='circ_Crude_Rate' ordinal='18' />
                  <column datatype='real' name='canc_Crude_Rate' ordinal='19' />
                  <column datatype='real' name='resp_circ_Crude_Rate' ordinal='20' />
                  <column datatype='real' name='population_density' ordinal='21' />
                  <column datatype='real' name='NO2_tenyears' ordinal='22' />
                  <column datatype='real' name='SO2_tenyears' ordinal='23' />
                  <column datatype='real' name='O3_tenyears' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Death rate vs. Pollutant sheet'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Death rate vs. Pollutant</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df2.csv+ (Multiple Connections)' name='federated.0d6x5161bfkpcv1gpey8j128cq0o' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Pollutant' datatype='string' name='[circ Crude Rate (df3.csv) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;NO2&quot;'>
              <calculation class='tableau' formula='&quot;NO2&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0d6x5161bfkpcv1gpey8j128cq0o'>
            <column caption='Pollutant' datatype='string' name='[Calculation_1428344796868304898]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[circ Crude Rate (df3.csv) Parameter]' />
            </column>
            <column caption='Pollutant Value' datatype='real' name='[Calculation_1428344796868476931]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Calculation_1428344796868304898] &#10;    WHEN &apos;NO2&apos; THEN [NO2_tenyears]&#10;    WHEN &apos;O3&apos; THEN [O3_tenyears]&#10;    WHEN &apos;SO2&apos; THEN [SO2_tenyears]&#10;    WHEN &apos;All&apos; THEN [SO2_tenyears] + [NO2_tenyears] + [O3_tenyears] END' />
            </column>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='NO2 tenyears' datatype='real' name='[NO2_tenyears]' role='measure' type='quantitative' />
            <column caption='O3 tenyears' datatype='real' name='[O3_tenyears]' role='measure' type='quantitative' />
            <column caption='SO2 tenyears' datatype='real' name='[SO2_tenyears]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Year (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[year]' new-bin='true' />
            </column>
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column caption='pollution Crude Rate' datatype='real' name='[pollution_Crude_Rate]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1428344796868476931]' derivation='Sum' name='[sum:Calculation_1428344796868476931:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pollution_Crude_Rate]' derivation='Sum' name='[sum:pollution_Crude_Rate:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[Year (group)]'>
            <groupfilter function='member' level='[Year (group)]' member='&quot;2016&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[Year (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[Longitude (generated)]' field-type='quantitative' max='-11818001.900325032' min='-14225735.571184732' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[Latitude (generated)]' field-type='quantitative' max='5252521.0561285904' min='3089992.1766974013' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:Calculation_1428344796868476931:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:pollution_Crude_Rate:qk]' />
              <lod column='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[none:County:nk]' />
              <lod column='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[none:State:nk]' />
              <color column='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:Calculation_1428344796868476931:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[Latitude (generated)]</rows>
        <cols>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E8BF2A72-7765-4377-B996-E7701904F024}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='df2.csv+ (Multiple Connections)' name='federated.0d6x5161bfkpcv1gpey8j128cq0o' />
          </datasources>
          <datasource-dependencies datasource='federated.0d6x5161bfkpcv1gpey8j128cq0o'>
            <column datatype='string' name='[County (df3.csv)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='NO2 tenyears (df3.csv)' datatype='real' name='[NO2_tenyears (df3.csv)]' role='measure' type='quantitative' />
            <column caption='O3 tenyears' datatype='real' name='[O3_tenyears]' role='measure' type='quantitative' />
            <column caption='SO2 tenyears' datatype='real' name='[SO2_tenyears]' role='measure' type='quantitative' />
            <column-instance column='[County (df3.csv)]' derivation='None' name='[none:County (df3.csv):nk]' pivot='key' type='nominal' />
            <column caption='resp Crude Rate (df3.csv)' datatype='real' name='[resp_Crude_Rate (df3.csv)]' role='measure' type='quantitative' />
            <column-instance column='[NO2_tenyears (df3.csv)]' derivation='Sum' name='[sum:NO2_tenyears (df3.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[O3_tenyears]' derivation='Sum' name='[sum:O3_tenyears:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SO2_tenyears]' derivation='Sum' name='[sum:SO2_tenyears:qk]' pivot='key' type='quantitative' />
            <column-instance column='[resp_Crude_Rate (df3.csv)]' derivation='Sum' name='[sum:resp_Crude_Rate (df3.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:NO2_tenyears (df3.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:O3_tenyears:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:SO2_tenyears:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:resp_Crude_Rate (df3.csv):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[Multiple Values]</rows>
        <cols>([federated.0d6x5161bfkpcv1gpey8j128cq0o].[none:County (df3.csv):nk] / [federated.0d6x5161bfkpcv1gpey8j128cq0o].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{ABA9F1FD-09AF-4028-A1BE-A9C569465165}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{55B5A487-DE47-410C-8D3D-5F9077F0792B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Death rate vs. Pollutant Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='df2.csv+ (Multiple Connections)' name='federated.0d6x5161bfkpcv1gpey8j128cq0o' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Pollutant' datatype='string' name='[circ Crude Rate (df3.csv) Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;NO2&quot;'>
          <calculation class='tableau' formula='&quot;NO2&quot;' />
          <members>
            <member value='&quot;NO2&quot;' />
            <member value='&quot;O3&quot;' />
            <member value='&quot;SO2&quot;' />
            <member value='&quot;All&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0d6x5161bfkpcv1gpey8j128cq0o'>
        <column datatype='string' name='[Year (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[year]' new-bin='true' />
        </column>
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Death rate vs. Pollutant sheet' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='Death rate vs. Pollutant sheet' pane-specification-id='0' param='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:Calculation_1428344796868476931:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18250' id='9' name='Death rate vs. Pollutant sheet' pane-specification-id='0' param='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:pollution_Crude_Rate:qk]' type-v2='size' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13500' id='10' mode='list' param='[Parameters].[circ Crude Rate (df3.csv) Parameter]' type-v2='paramctrl' w='16000' x='83200' y='27375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23000' id='21' name='Death rate vs. Pollutant sheet' param='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[Year (group)]' type-v2='filter' values='database' w='16000' x='83200' y='40875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='23000' id='21' mode='checkdropdown' name='Death rate vs. Pollutant sheet' param='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[Year (group)]' type-v2='filter' values='database' w='16000' x='83200' y='40875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Death rate vs. Pollutant sheet' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Death rate vs. Pollutant sheet' pane-specification-id='0' param='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:Calculation_1428344796868476931:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18250' id='9' name='Death rate vs. Pollutant sheet' pane-specification-id='0' param='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:pollution_Crude_Rate:qk]' type-v2='size' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13500' id='10' mode='list' param='[Parameters].[circ Crude Rate (df3.csv) Parameter]' type-v2='paramctrl' w='16000' x='83200' y='27375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{59B590B4-F265-4630-9247-EA9AF91F60B0}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Death rate vs. Pollutant sheet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:pollution_Crude_Rate:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:Calculation_1428344796868476931:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[Year (Df3.Csv) (group)]</field>
            <field>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[Year (group)]</field>
            <field>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[none:County (df3.csv):nk]</field>
            <field>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[none:County:nk]</field>
            <field>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[none:County_Name:nk]</field>
            <field>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[none:State (death_data.csv):nk]</field>
            <field>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[none:State (df3.csv):nk]</field>
            <field>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[none:State:nk]</field>
            <field>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:O3_tenyears:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CFDB8CF1-6804-4690-8FF0-AC62B8D3DFFB}' />
    </window>
    <window class='dashboard' maximized='true' name='Death rate vs. Pollutant Dashboard'>
      <viewpoints>
        <viewpoint name='Death rate vs. Pollutant sheet'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[sum:Calculation_1428344796868476931:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{DB5B0244-30B7-42CB-BA58-9DFCC3AA362F}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0d6x5161bfkpcv1gpey8j128cq0o].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[:Measure Names]</field>
            <field>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[none:County (df3.csv):nk]</field>
            <field>[federated.0d6x5161bfkpcv1gpey8j128cq0o].[none:State (df3.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C378F5DF-BE2D-4863-9823-B99D65CBDC37}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{10DF0D7E-92F4-4997-83C0-CC761C31DB5D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Death rate vs. Pollutant Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO19SawkyXneF7nVvryl1xnOkCKpxeRQy1iWbFECBemgiw0DXgADgg8++WB5
      Ofjgi034bsCAfPDJsGD7ZEAn27JlCSJgkeIyJGemORxOj6Y508N509Pdr9+rfcvFh+o/+s+o
      iMzIqnqv672XH9DoelWZEZGR8e9//CGSJElQosQVhfO8B1CixPNESQAlrjRKAihxpVESQIkr
      jZIASlxppAjg3bfv4LXXvoN37n1ovGHU62EB4P07dzDIa30xQW80Kzyoo3vv4JvffQ3fv/Oj
      1PfU5507d1Lf93q9zPbyfi9xdeF+9atf/Sr98f037uDLX/51/PjNb6N282W8/b1v43gwQ9OL
      8foP3sJ4luAH/+9P8NE0RNI/xQfHxzg5HuDm9UOcHN3HvaMHcByBt+68hUenQ8THf4n/+c13
      8fKnbuHtN76H48EM1w/38eMf/xjdvT188P776D1+gHffu4e96y/Ad5fjuPvd1/H5L38ZH7/1
      JtrXu/j+997ELBSYPHqAxksv4cN33wUAdDod3Lt3D3/+Z/8X09BBowLceetHmIbA8Ufv4/37
      9zEJBf78T/8I09DBjVs3SpFXIgXterjRreDNb/453u9F+M63vokwiRHFwBtvvI5bt17Cz7/6
      iwgcB1/4hV/C8PQRAODk4/cxC/Zw0KojjiO88fobuH37Nj73s69g/MHrsq0IQEcM8ea9j/Hh
      Tx7g4aNHCCPAc3g4YoE3vvsawmoLb772Jv7ar/wKPvrgL1NjvH//PgDg3r17uPXST+HVX3wF
      Io4RxwneeP11PDg+xauv/jI+vv/sd/csZrDEhUaKAKLZCN997Tv44cMYr37hM2i4wBe/9CW8
      d/cdCMeB4zho79XxvW+8hnks4Dgi1dTNm9dx+vF7eDRK4LoOUGni43ffRFI/kG25APY//UX8
      6M/+EJ995Zewv7+HePgQdz86xVtvvfW0LR8//+pfxW/8jV/GjYMWvvnNb2GReKmBe1jgtde+
      i95ohr26h2+89iZ+dPcuHHc5TiGejY1+j85oEktcXIgyElziKqNUiUtcaZQEUOJKI6VYz2bF
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Death rate vs. Pollutant sheet' width='192'>
      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
      KWKmCvPydwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 5' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 6' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
